---
import Card from '../components/Card.astro';
const { examples: groups } = Astro.props;
const { pathname } = Astro.request.url;
---

<html lang="en">

<head>
	<meta charset="utf-8" />
	<link rel="icon" type="image/svg+xml" href="/favicon.svg"/>
	<link rel="alternate icon" type="image/x-icon" href="/favicon.ico" />
	<meta name="viewport" content="width=device-width" />
	<title>astro.new</title>

	<link rel="stylesheet" href="/index.css" />

	<style>
		main {
			display: flex;
			flex-direction: column;
			max-width: 1280px;
			margin: 0 auto;
		}
        .title {
            background: linear-gradient(180.2deg, #205EFF 0.17%, #C238BD 114.76%);
			-webkit-background-clip: text;
			-webkit-text-fill-color: transparent;
        }
        .pathname {
            background: linear-gradient(0deg, #FF9776 3.25%, #FF6B6B 83.27%, #FFD66B 102.38%);

            -webkit-background-clip: text;
			-webkit-text-fill-color: transparent;
        }
		.templates {
			display: flex;
			flex-direction: column;
			gap: 3rem;
		}
		.templates > li {
			display: flex;
			flex-direction: column;
			gap: 1em;
		}
		.cards {
			display: grid;
			list-style: none;
			grid-template-columns: repeat(auto-fill, minmax(28rem, auto));
			grid-auto-rows: auto;
			gap: 1rem;
		}
	</style>

	<script type="module">
		if ('paintWorklet' in CSS) {
			CSS.paintWorklet.addModule('/pixel.js');
			const cards = document.querySelectorAll('.card');
			for (const card of cards) {
				card.classList.add('loaded');
			}
		}
	</script>
</head>

<body>
	<main>
		<h1>
            <span class="title">astro.new</span>{pathname !== '/' && <span class="pathname">{pathname}</span>}
        </h1>

		<ul class="templates">
			{groups.map(([category, examples], i) => {
				return (
					<li>
						<h2>{category}</h2>
						<ul class="cards" style={`--base: ${i + 1};`}>
							{examples.map((example, j) => <li><Card {...example} index={j + 1} /></li>)}
						</ul>
					</li>
				);
			})}
		</ul>
	</main>
</body>

</html>
